/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/src/mainjs.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/cllGlobals.js":
/*!*********************************!*\
  !*** ./assets/js/cllGlobals.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = cllGlobals = {\n  add_to_list_btn: document.getElementById(\"add_to_list_btn\"),\n  isAddToListBtnClicked: false,\n  isSubmitBtnClicked: false,\n  isSettingsFormClicked: false,\n  currentProtocalDomain: document.location.origin,\n  searchEngineRequestSent: false,\n  //searchEngineLooping: false,\n  currentSearchResultsCollection: document.createElement(\"div\").getElementsByClassName('noClassHere')\n};\n\n//# sourceURL=webpack:///./assets/js/cllGlobals.js?");

/***/ }),

/***/ "./assets/js/functions/addClickToSettingsCancelBtn.js":
/*!************************************************************!*\
  !*** ./assets/js/functions/addClickToSettingsCancelBtn.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function addClickToSettingsCancelBtn() {\n  var cancelBtnArray = document.querySelectorAll(\".cancelBtn\");\n  cancelBtnArray.forEach(function (cancelBtn) {\n    if (typeof cancelBtn !== 'undefined') {\n      cancelBtn.addEventListener(\"click\", function () {\n        var dropDownBox = document.querySelector(\".listCategorySelector\");\n        var settingsSubmitBtn = document.querySelector(\".settingsSubmitBtn\"); //var editCategoryBtnArray = document.querySelectorAll('.cll_edit_category_btn');\n\n        var newCategoryInput = document.querySelector(\"input[name='newCategoryRequestElement']\");\n        dropDownBox.parentNode.removeChild(dropDownBox);\n        settingsSubmitBtn.parentNode.removeChild(settingsSubmitBtn);\n        cancelBtn.parentNode.removeChild(cancelBtn);\n\n        if (newCategoryInput) {\n          newCategoryInput.parentNode.removeChild(newCategoryInput);\n        }\n\n        event.stopPropagation(); //prevent parent element from being clicked\n\n        cllGlobals.isSettingsFormClicked = false;\n      });\n    } else {//console.log('settings cancelBtn is not defined');\n    }\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/addClickToSettingsCancelBtn.js?");

/***/ }),

/***/ "./assets/js/functions/addClickToSettingsSubmitBtn.js":
/*!************************************************************!*\
  !*** ./assets/js/functions/addClickToSettingsSubmitBtn.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\nmodule.exports = //Function for creating on-click functionality and information to UPDATE page\nfunction addClickToSettingsSubmitBtn(cllSettingsForm, updateCllListRequest, createNewCategoryRequest, makeRequest, replaceOccurrence) {\n  var settingsSubmitBtnArray = document.querySelectorAll('.settingsSubmitBtn');\n  settingsSubmitBtnArray.forEach(function (settingsSubmitBtn) {\n    if (typeof settingsSubmitBtn !== 'undefined') {\n      //console.log(\"Settings Submit Button Existance Verified\");\n      var isCategoryInputCreated = false;\n      settingsSubmitBtn.addEventListener(\"click\", function (event) {\n        event.preventDefault();\n        var x = document.querySelector(\".listCategorySelector\").selectedIndex;\n        var selectedCategory = document.getElementsByTagName(\"option\")[x].value;\n\n        if (selectedCategory === 'new category') {\n          if (isCategoryInputCreated === false) {\n            alert('You are making a New Category Request!');\n            var newCategoryRequestElement = document.createElement(\"input\"); //input element, text\n\n            newCategoryRequestElement.setAttribute('type', \"text\");\n            newCategoryRequestElement.setAttribute('name', \"newCategoryRequestElement\");\n            newCategoryRequestElement.setAttribute('placeholder', \"New category here\");\n            cllSettingsForm.appendChild(newCategoryRequestElement);\n            isCategoryInputCreated = true;\n          } else if (isCategoryInputCreated === true) {\n            var newCategoryValue = document.querySelector('[name=\"newCategoryRequestElement\"]').value; //console.log(newCategoryValue);\n\n            createNewCategoryRequest(newCategoryValue.toLowerCase(), makeRequest); //create new category with this value and change page to this category\n\n            var cllRequestData = {\n              \"selectedCategory\": newCategoryValue.toLowerCase(),\n              \"currentCllId\": cllSettingsForm.getAttribute('cllid')\n            };\n            updateCllListRequest(cllRequestData, makeRequest, replaceOccurrence);\n          }\n        } else {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = existing_category_names_array[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              _objectDestructuringEmpty(_step.value);\n\n              if (selectedCategory === '') {\n                alert(\"You must select a link category!\");\n                break;\n              } else if (selectedCategory !== '') {\n                //console.log(\"Successfully adding \"+selectedCategory);\n                //HTTP Request to update page FUNCTION\n                var cllRequestData = {\n                  \"selectedCategory\": selectedCategory,\n                  \"currentCllId\": cllSettingsForm.getAttribute('cllid')\n                };\n                updateCllListRequest(cllRequestData, makeRequest, replaceOccurrence);\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/addClickToSettingsSubmitBtn.js?");

/***/ }),

/***/ "./assets/js/functions/cllAddOnClickToCancelBtn.js":
/*!*********************************************************!*\
  !*** ./assets/js/functions/cllAddOnClickToCancelBtn.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function cllAddOnClickToCancelBtn() {\n  var cancelBtnArray = document.querySelectorAll(\".cancelBtn\");\n  cancelBtnArray.forEach(function (cancelBtn) {\n    if (typeof cancelBtn !== 'undefined') {\n      cancelBtn.addEventListener(\"click\", function () {\n        var addToListForm = document.getElementById(\"addToListForm\");\n        addToListForm.parentNode.removeChild(addToListForm);\n        event.stopPropagation(); //prevent parent element from being clicked\n\n        cllGlobals.isAddToListBtnClicked = false;\n      });\n    } else {//console.log('cancelBtn is not defined');\n    }\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/cllAddOnClickToCancelBtn.js?");

/***/ }),

/***/ "./assets/js/functions/cllAddOnClickToSubmitBtn.js":
/*!*********************************************************!*\
  !*** ./assets/js/functions/cllAddOnClickToSubmitBtn.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function cllAddOnClickToSubmitBtn(currentAddToListBtn, isUrl, endLinkRequest, throughLinkRequest, makeRequest) {\n  var submitBtn = document.querySelector('button.submitBtn');\n\n  if (typeof submitBtn !== 'undefined') {\n    //console.log(\"Submit Button Existance Verified\");\n    submitBtn.addEventListener(\"click\", function () {\n      var x = document.getElementById(\"linkTypeSelecter\").selectedIndex;\n      var linkType = document.getElementsByTagName(\"option\")[x].value; //console.log(document.querySelector('[name=\"newListItemUrl\"].add_to_list_input'));\n\n      if (document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value === '') {\n        alert(\"You must submit a title!\");\n      } else if (linkType.toLowerCase() === 'external link') {\n        if (document.querySelector('[name=\"newListItemUrl\"].add_to_list_input').value === '') {\n          alert(\"You must submit a URL!\");\n        } else if (!isUrl(document.querySelector('[name=\"newListItemUrl\"].add_to_list_input').value)) {\n          alert(\"Please enter a valid URL!\");\n        } else {\n          endLinkRequest(currentAddToListBtn, makeRequest);\n        }\n      } else if (linkType.toLowerCase() === 'internal link') {\n        throughLinkRequest(currentAddToListBtn, makeRequest);\n      } else if (linkType.toLowerCase() !== 'internal link' && linkType.toLowerCase() !== 'external link') {\n        alert(\"You must select a Link Type!\");\n      }\n    });\n    return;\n  }\n};\n\n//# sourceURL=webpack:///./assets/js/functions/cllAddOnClickToSubmitBtn.js?");

/***/ }),

/***/ "./assets/js/functions/cllCreateForm.js":
/*!**********************************************!*\
  !*** ./assets/js/functions/cllCreateForm.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function cllCreateForm(cllAddOnClickToSubmitBtn, cllAddOnClickToCancelBtn, isUrl, endLinkRequest, throughLinkRequest, makeRequest) {\n  var i = 0;\n  var add_to_list_btn_array = document.querySelectorAll(\".add_to_list_btn\");\n  add_to_list_btn_array.forEach(function (add_to_list_btn) {\n    var cllId = document.createAttribute(\"cllId\");\n    add_to_list_btn.setAttributeNode(cllId);\n    add_to_list_btn.setAttribute('cllid', [i]);\n    i += 1;\n    add_to_list_btn.addEventListener(\"click\", function () {\n      //if button has not been clicked, create form\n      if (cllGlobals.isAddToListBtnClicked === false) {\n        var f = document.createElement(\"form\");\n        f.setAttribute('id', 'addToListForm');\n        var linktitle = document.createElement(\"input\");\n        linktitle.setAttribute('type', \"text\");\n        linktitle.setAttribute('name', \"newListItemTitle\");\n        linktitle.setAttribute('placeholder', \"Link title here\");\n        linktitle.setAttribute(\"class\", \"add_to_list_input\");\n        var link = document.createElement(\"input\");\n        link.setAttribute('type', \"text\");\n        link.setAttribute('name', \"newListItemUrl\");\n        link.setAttribute('placeholder', \"URL here\");\n        link.setAttribute(\"class\", \"add_to_list_input\");\n        var dropDownBox = document.createElement(\"select\");\n        dropDownBox.setAttribute('id', 'linkTypeSelecter');\n        var dropDownBoxPlaceHolder = document.createElement(\"option\");\n        dropDownBoxPlaceHolder.innerHTML = \"Link Type\";\n        dropDownBoxPlaceHolder.value = '';\n        dropDownBoxPlaceHolder.disabled = true;\n        dropDownBoxPlaceHolder.selected = true;\n        dropDownBoxPlaceHolder.hidden = true; //dropDownBoxPlaceHolder.required = true;\n\n        var endLinkOption = document.createElement(\"option\");\n        endLinkOption.innerHTML = \"External Link\"; //endLinkOption.setAttribute('name',\"Link Type\");\n\n        var throughLinkOption = document.createElement(\"option\");\n        throughLinkOption.innerHTML = \"Internal Link\"; //throughLinkOption.setAttribute('name',\"Link Type\");\n\n        dropDownBox.appendChild(endLinkOption);\n        dropDownBox.appendChild(throughLinkOption);\n        dropDownBox.appendChild(dropDownBoxPlaceHolder);\n        var b = document.createElement(\"button\");\n        b.setAttribute('name', \"submitBtn\");\n        b.setAttribute('type', 'button');\n        b.setAttribute('class', 'submitBtn');\n        b.innerHTML = 'Submit';\n        var cancelBtn = document.createElement(\"button\");\n        cancelBtn.setAttribute('name', \"cancelBtn\");\n        cancelBtn.setAttribute('type', 'button');\n        cancelBtn.setAttribute('class', 'cancelBtn');\n        f.appendChild(linktitle);\n        f.appendChild(link);\n        f.appendChild(dropDownBox);\n        f.appendChild(b);\n        f.appendChild(cancelBtn);\n        add_to_list_btn.appendChild(f);\n        cllGlobals.isAddToListBtnClicked = true;\n        cllAddOnClickToSubmitBtn(add_to_list_btn, isUrl, endLinkRequest, throughLinkRequest, makeRequest);\n        cllAddOnClickToCancelBtn(); //change form depending on link type selected\n        //var box = document.getElementById(\"linkTypeSelecter\");\n\n        dropDownBox.addEventListener('change', function () {\n          var x = document.getElementById(\"linkTypeSelecter\").selectedIndex;\n          var linkType = document.getElementsByTagName(\"option\")[x].value;\n\n          if (linkType.toLowerCase() === 'internal link') {\n            link.parentNode.removeChild(link);\n          } else if (linkType.toLowerCase() === 'external link') {\n            linktitle.parentNode.insertBefore(link, linktitle.nextSibling); //f.appendChild(link);\n          }\n        });\n      }\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/cllCreateForm.js?");

/***/ }),

/***/ "./assets/js/functions/cllCreateSettingsForm.js":
/*!******************************************************!*\
  !*** ./assets/js/functions/cllCreateSettingsForm.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function cllCreateSettingsForm(addClickToSettingsSubmitBtn, addClickToSettingsCancelBtn, updateCllListRequest, createNewCategoryRequest, makeRequest, replaceOccurrence) {\n  var settingsFormInc = 0; //createElementandAppendIt\n\n  var cllLinkListArray = document.querySelectorAll('.cll_link_list');\n  cllLinkListArray.forEach(function (cllLinkList) {\n    var cllSettingsBtn = document.createElement(\"button\");\n    cllSettingsBtn.setAttribute('class', 'cll_edit_category_btn');\n    cllSettingsBtn.innerHTML = \"Edit Category\";\n    cllLinkList.insertBefore(cllSettingsBtn, cllLinkList.firstChild);\n  });\n  var cllSettingsFormArray = document.querySelectorAll(\".cll_edit_category_btn\");\n  cllSettingsFormArray.forEach(function (cllSettingsForm) {\n    var cllid = document.createAttribute('cllid');\n    cllSettingsForm.setAttributeNode(cllid);\n    cllSettingsForm.setAttribute('cllid', settingsFormInc);\n    settingsFormInc += 1;\n  });\n  cllSettingsFormArray.forEach(function (cllSettingsForm) {\n    cllSettingsForm.addEventListener(\"click\", function () {\n      if (cllGlobals.isSettingsFormClicked === false) {\n        var dropDownBox = document.createElement(\"select\"); //input element, text\n\n        dropDownBox.setAttribute('class', 'listCategorySelector');\n        var dropDownBoxPlaceHolder = document.createElement(\"option\"); //input element, text\n\n        dropDownBoxPlaceHolder.innerHTML = \"List Category\";\n        dropDownBoxPlaceHolder.value = '';\n        dropDownBoxPlaceHolder.disabled = true;\n        dropDownBoxPlaceHolder.selected = true;\n        dropDownBoxPlaceHolder.hidden = true;\n        var addNewCategory = document.createElement(\"option\"); //input element, text\n\n        addNewCategory.innerHTML = \"New Category + \";\n        addNewCategory.value = 'new category';\n        dropDownBox.appendChild(addNewCategory);\n        var b = document.createElement(\"button\"); //button element, b button\n\n        b.setAttribute('name', \"settingsSubmitBtn\");\n        b.setAttribute('type', 'button');\n        b.setAttribute('class', 'settingsSubmitBtn');\n        b.innerHTML = 'Submit';\n        var cancelBtn = document.createElement(\"button\");\n        cancelBtn.setAttribute('name', \"cancelBtn\");\n        cancelBtn.setAttribute('type', 'button');\n        cancelBtn.setAttribute('class', 'cancelBtn');\n        existing_category_names_array.forEach(function (existing_category_name) {\n          var existing_category_option = document.createElement(\"option\");\n          existing_category_option.innerHTML = existing_category_name;\n          dropDownBox.appendChild(existing_category_option);\n        });\n        cllSettingsForm.appendChild(dropDownBox);\n        cllSettingsForm.appendChild(b);\n        cllSettingsForm.appendChild(cancelBtn); //console.log(\"Create Settings Form has Run\");\n\n        cllGlobals.isSettingsFormClicked = true;\n        addClickToSettingsSubmitBtn(cllSettingsForm, updateCllListRequest, createNewCategoryRequest, makeRequest, replaceOccurrence);\n        addClickToSettingsCancelBtn();\n      }\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/cllCreateSettingsForm.js?");

/***/ }),

/***/ "./assets/js/functions/createAddToListBtn.js":
/*!***************************************************!*\
  !*** ./assets/js/functions/createAddToListBtn.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createAddToListBtn() {\n  var allListsArray = document.querySelectorAll('.link-list-style-1');\n  allListsArray.forEach(function (list) {\n    //append Add To List! button\n    var addToListBtn = document.createElement('button');\n    addToListBtn.setAttribute('class', \"add_to_list_btn\");\n    addToListBtn.innerHTML = \"Add To List +\";\n    list.parentNode.insertBefore(addToListBtn, list.nextSibling);\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createAddToListBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createAdminRemoveBtn.js":
/*!*****************************************************!*\
  !*** ./assets/js/functions/createAdminRemoveBtn.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createAdminRemoveBtn(makeRequest, isObjEmpty) {\n  var allListItemsArray = document.querySelectorAll('.link-list-item');\n  var allListItemsAnchorArray = document.querySelectorAll('.link-list-title');\n  var deleteBtnIncrementer = 0; //append delete buttons to list items\n\n  allListItemsArray.forEach(function (listItem) {\n    var adminDeleteBtn = document.createElement(\"button\");\n    adminDeleteBtn.setAttribute('class', 'adminDeleteBtn');\n    var cllId = document.createAttribute(\"cllId\"); // Create a \"class\" attribute\n\n    adminDeleteBtn.setAttributeNode(cllId);\n    adminDeleteBtn.setAttribute('cllid', deleteBtnIncrementer);\n    listItem.appendChild(adminDeleteBtn); //append to inner html\n\n    deleteBtnIncrementer += 1;\n  });\n  var adminDeleteBtnArray = document.querySelectorAll('.adminDeleteBtn');\n  adminDeleteBtnArray.forEach(function (adminDeleteBtn) {\n    adminDeleteBtn.addEventListener(\"click\", function () {\n      allListItemsAnchorArray.forEach(function (listItem) {\n        if (listItem.getAttribute('cllid') === adminDeleteBtn.getAttribute('cllid')) {\n          //console.log(listItem.textContent.trim().replace(/ /g, '-').toLowerCase());\n          var listItemSlug = listItem.textContent.trim().replace(/\\s/g, '-').toLowerCase(); //console.log(listItemSlug);\n          //console.log(listItem.innerHTML);\n          //deletePage if it exists\n\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages?slug=' + listItemSlug, \"GET\").then(function (request) {\n            var objResponse = JSON.parse(request.responseText); //console.log(objResponse);\n            //console.log(objResponse[0].id);\n            //get ID\n\n            if (isObjEmpty(objResponse) === true) {//console.log(\"A page with a slug of that type was unable to be found. (Response was empty)\");\n            } else {\n              //console.log(objResponse[0].id);\n              //console.log(\"Response was not empty\");\n              //console.log(\"deleting the associated page\");\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + objResponse[0].id, \"DELETE\").then(function () {//console.log(\"Successfully deleted page!\");\n              })[\"catch\"](function (error) {\n                //console.log(\"Failed to delete page\");\n                console.log(error);\n              });\n            }\n          })[\"catch\"](function (error) {\n            //console.log(\"Unable to get page information about list item\");\n            console.log(error);\n          }); //Delete post if it exists\n\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link?slug=' + listItemSlug, 'GET').then(function (request) {\n            var objResponse = JSON.parse(request.responseText); //console.log(objResponse);\n\n            if (isObjEmpty(objResponse) === true) {//console.log(\"A post with a slug of that type was unable to be found. (Response was empty)\");\n            } else {\n              //console.log(objResponse[0].id);\n              //console.log(\"Response was not empty\");\n              //console.log(\"deleting the associated post\");\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'DELETE').then(function () {//console.log(\"Successfully deleted post!\");\n              })[\"catch\"](function (error) {\n                //console.log(\"Failed to delete post\");\n                console.log(error);\n              });\n            }\n          })[\"catch\"](function (error) {\n            //console.log(\"unable to get post information about list item\");\n            console.log(error);\n          });\n          allListItemsArray.forEach(function (listItemToRemove) {\n            if (listItemToRemove.getAttribute('cllId') === adminDeleteBtn.getAttribute('cllId')) {\n              listItemToRemove.parentNode.removeChild(listItemToRemove);\n\n              while (listItemToRemove.firstChild) {\n                listItemToRemove.removeChild(listItemToRemove.firstChild);\n              }\n            }\n          });\n        } else {//console.log(\"No match was found!\");\n        }\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createAdminRemoveBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createDeleteListBtn.js":
/*!****************************************************!*\
  !*** ./assets/js/functions/createDeleteListBtn.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createDeleteListBtn(setAttributeOfElementsInArray, makeRequest) {\n  var cllLinkListArray = document.querySelectorAll('.cll_link_list'); //console.log(cllLinkListArray);\n\n  cllLinkListArray.forEach(function (cllLinkList) {\n    var deleteListBtn = document.createElement(\"button\");\n    deleteListBtn.setAttribute('class', 'delete_list_btn');\n    deleteListBtn.innerHTML = \"Delete List\";\n    cllLinkList.insertBefore(deleteListBtn, cllLinkList.firstChild);\n  });\n  var listArray = document.querySelectorAll('.cll_link_list');\n  var deleteListBtnCollection = document.querySelectorAll(\".delete_list_btn\");\n  setAttributeOfElementsInArray(deleteListBtnCollection, 'cllId');\n  setAttributeOfElementsInArray(listArray, 'cllId');\n  deleteListBtnCollection.forEach(function (deleteListBtn) {\n    deleteListBtn.addEventListener(\"click\", function () {\n      makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\").then(function (request) {\n        var response = request.responseText;\n        var rawResponse = response.split('{\"id\":' + current_page_id).pop();\n        var jsonResponse = '{\"id\":' + current_page_id + rawResponse;\n        var objResponse = JSON.parse(jsonResponse);\n        var cllListRegex = /\\[cll_list\\s?(.*?)\\]/g;\n        var cllListShortCodeArray = objResponse.content.raw.match(cllListRegex); //console.log(cllListShortCodeArray);\n        //console.log(cllListShortCodeArray[deleteListBtn.getAttribute('cllId')]);\n        //console.log(objResponse.content.raw);\n\n        var newPageContent = objResponse.content.raw.replace(cllListShortCodeArray[deleteListBtn.getAttribute('cllId')], ''); //console.log(newPageContent);\n\n        var newPageData = {\n          \"content\": newPageContent //Delete the appropriate list from the front end.\n\n        };\n        makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\", JSON.stringify(newPageData), true); //Delete list from front end visually\n\n        listArray.forEach(function (listToRemove) {\n          if (listToRemove.getAttribute('cllId') === deleteListBtn.getAttribute('cllId')) {\n            listToRemove.parentNode.removeChild(listToRemove);\n\n            while (listToRemove.firstChild) {\n              listToRemove.removeChild(listToRemove.firstChild);\n            }\n          }\n        });\n        return;\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createDeleteListBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createDownVoteBtn.js":
/*!**************************************************!*\
  !*** ./assets/js/functions/createDownVoteBtn.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createDownVoteBtn(setAttributeOfElementsInArray, makeRequest) {\n  var allListItemsArray = document.querySelectorAll('.link-list-item');\n  var incrementer = 0;\n  allListItemsArray.forEach(function (listItem) {\n    var downVoteBtn = document.createElement(\"button\");\n    downVoteBtn.setAttribute('class', 'down_vote_button');\n    var cllId = document.createAttribute(\"cllId\"); // Create a \"class\" attribute\n\n    downVoteBtn.setAttributeNode(cllId);\n    downVoteBtn.setAttribute('cllid', incrementer);\n    listItem.appendChild(downVoteBtn); //append to inner html\n\n    incrementer += 1;\n  });\n  var linkListTitleArray = document.querySelectorAll('.link-list-title');\n  setAttributeOfElementsInArray(linkListTitleArray, 'cllId');\n  var downVoteBtnArray = document.querySelectorAll('.down_vote_button');\n  downVoteBtnArray.forEach(function (downVoteBtn) {\n    downVoteBtn.addEventListener('click', function () {\n      linkListTitleArray.forEach(function (linkListTitle) {\n        var post_slug = linkListTitle.textContent.trim().replace(/\\s/g, '-').toLowerCase(); //console.log(post_slug);\n\n        if (linkListTitle.getAttribute('cllId') === downVoteBtn.getAttribute('cllId')) {\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link?slug=' + post_slug, 'GET').then(function (request) {\n            var objResponse = JSON.parse(request.responseText);\n            var currentLinkItemId = downVoteBtn.getAttribute('cllId'); //console.log(objResponse);\n\n            var metaObj = objResponse[0].meta;\n\n            try {\n              var voteRecordObj = JSON.parse(metaObj.voteRecord); //console.log(voteRecordObj[cllUserId]);\n\n              if (isNaN(voteRecordObj)) {\n                //console.log(error);\n                //console.log(\"Could not parse voteRecord\");\n                //console.log(\"There is no information on record *assertion\");\n                ////console.log(\"Change voter status to 0\");\n                metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"0\"}'; ////console.log(\"add downvote to post\");\n\n                metaObj.down_votes += 1; //visually down vote\n\n                var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                var currentDownVoteValue = parseInt(downVoteElement.textContent); //console.log(downVoteElement.textContent);\n                //console.log(currentDownVoteValue);\n                //console.log(typeof currentDownVoteValue);\n\n                currentDownVoteValue += 1;\n                downVoteElement.innerHTML = currentDownVoteValue;\n                var newPostMetaData = JSON.stringify({\n                  \"meta\": metaObj\n                });\n                makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n                })[\"catch\"](function (error) {\n                  console.log(error);\n                });\n                return;\n              } else if (voteRecordObj[cllUserId] !== \"\") //if current user status is not empty\n                {\n                  //console.log(\"There is information on record, here's the information: \");\n                  //console.log(metaObj.voteRecord);\n                  //console.log(\"Here is the current users vote status: \");\n                  //console.log(parseInt(voteRecordObj[cllUserId]));\n                  var currentUserVoteStatus = parseInt(voteRecordObj[cllUserId]); ////console.log(JSON.parse(metaObj.voteRecord))\n\n                  if (currentUserVoteStatus === 0) {\n                    alert(\"You've already down voted this post!\");\n                    return;\n                  } else if (currentUserVoteStatus === 1) {\n                    //Set user vote status to 0\n                    var voteRecordObj = JSON.parse(metaObj.voteRecord);\n                    voteRecordObj[cllUserId] = \"0\";\n                    var newVoteStatusData = JSON.stringify(voteRecordObj);\n                    metaObj.voteRecord = newVoteStatusData; //add down vote\n\n                    metaObj.down_votes += 1; //remove up vote\n\n                    metaObj.up_votes -= 1;\n                    var newPostMetaData = JSON.stringify({\n                      \"meta\": metaObj\n                    });\n                    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {\n                      //console.log(request.responseText);\n                      //get appropriate upVoteBtn + DownVoteBtn and change their values\n                      var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                      var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                      var currentDownVoteValue = parseInt(downVoteElement.innerHTML);\n                      currentDownVoteValue += 1;\n                      downVoteElement.innerHTML = currentDownVoteValue;\n                      var currentUpVoteValue = parseInt(upVoteElement.innerHTML);\n                      currentUpVoteValue -= 1;\n                      upVoteElement.innerHTML = currentUpVoteValue;\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                  } else if (currentUserVoteStatus === 3) {\n                    //Increment down_votes in metaObj\n                    metaObj.down_votes += 1; //Edit JSONstring metaObj.voteRecord\n\n                    var voteRecordObj = JSON.parse(metaObj.voteRecord);\n                    voteRecordObj[cllUserId] = \"0\";\n                    var newVoteStatusData = JSON.stringify(voteRecordObj);\n                    metaObj.voteRecord = newVoteStatusData;\n                    var newPostMetaData = JSON.stringify({\n                      \"meta\": metaObj\n                    });\n                    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {\n                      //console.log(request.responseText);\n                      var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                      var currentDownVoteValue = parseInt(downVoteElement.innerHTML);\n                      currentDownVoteValue += 1;\n                      downVoteElement.innerHTML = currentDownVoteValue;\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    }); //console.log(\"Switch vote status to 1\");\n                    //console.log(\"Add UpVote to Post\");\n                  }\n                }\n            } catch (error) {\n              console.log(error); //console.log(\"Could not parse voteRecord\");\n              //console.log(\"There is no information on record *assertion\");\n              ////console.log(\"Change voter status to 0\");\n\n              metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"0\"}'; ////console.log(\"add downvote to post\");\n\n              metaObj.down_votes += 1; //visually down vote\n\n              var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n              var currentDownVoteValue = parseInt(downVoteElement.textContent); //console.log(downVoteElement.textContent);\n              //console.log(currentDownVoteValue);\n              //console.log(typeof currentDownVoteValue);\n\n              currentDownVoteValue += 1;\n              downVoteElement.innerHTML = currentDownVoteValue;\n              var newPostMetaData = JSON.stringify({\n                \"meta\": metaObj\n              });\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n              return;\n            }\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n        }\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createDownVoteBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createNeutralVoteBtn.js":
/*!*****************************************************!*\
  !*** ./assets/js/functions/createNeutralVoteBtn.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createNeutralVoteBtn(setAttributeOfElementsInArray, makeRequest) {\n  var allListItemsCollection = document.getElementsByClassName('link-list-item');\n  var allListItemsArray = Array.prototype.slice.call(allListItemsCollection, 0);\n  var incrementer = 0;\n  allListItemsArray.forEach(function (listItem) {\n    var neutralVoteBtn = document.createElement(\"button\");\n    neutralVoteBtn.setAttribute('class', 'neutral_vote_button');\n    var cllId = document.createAttribute(\"cllId\"); // Create a \"class\" attribute\n\n    neutralVoteBtn.setAttributeNode(cllId);\n    neutralVoteBtn.setAttribute('cllid', incrementer);\n    listItem.appendChild(neutralVoteBtn); //append to inner html\n\n    incrementer += 1;\n  });\n  var linkListTitleArray = document.querySelectorAll('.link-list-title');\n  setAttributeOfElementsInArray(linkListTitleArray, 'cllId');\n  var neutralVoteBtnArray = document.querySelectorAll('.neutral_vote_button');\n  neutralVoteBtnArray.forEach(function (neutralVoteBtn) {\n    neutralVoteBtn.addEventListener('click', function () {\n      linkListTitleArray.forEach(function (linkListTitle) {\n        var post_slug = linkListTitle.textContent.trim().replace(/\\s/g, '-').toLowerCase(); //console.log(post_slug);\n\n        if (linkListTitle.getAttribute('cllId') === neutralVoteBtn.getAttribute('cllId')) {\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link?slug=' + post_slug, 'GET').then(function (request) {\n            var objResponse = JSON.parse(request.responseText);\n            var currentLinkItemId = neutralVoteBtn.getAttribute('cllId'); //console.log(objResponse);\n\n            var metaObj = objResponse[0].meta;\n\n            try {\n              var voteRecordObj = JSON.parse(metaObj.voteRecord); //console.log(voteRecordObj[cllUserId]);\n              //decrement appropriate vote\n\n              if (isNaN(voteRecordObj[cllUserId])) {\n                //console.log(error);\n                ////console.log(\"Could not parse voteRecord\");\n                //console.log(\"There is no information on record *assertion\");\n                //console.log(metaObj.voteRecord);\n                //console.log(\"Change voter status to 3\");\n                metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"3\"}';\n                var newPostMetaData = JSON.stringify({\n                  \"meta\": metaObj\n                });\n                makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n                })[\"catch\"](function (error) {\n                  console.log(error);\n                });\n                return;\n              } else if (voteRecordObj[cllUserId] === \"1\") {\n                metaObj.up_votes -= 1; //visually remove users up vote\n\n                var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                var currentUpVoteValue = parseInt(upVoteElement.innerHTML);\n                currentUpVoteValue -= 1;\n                upVoteElement.innerHTML = currentUpVoteValue;\n              } else if (voteRecordObj[cllUserId] === \"0\") {\n                metaObj.down_votes -= 1; //visually remove users down vote\n\n                var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                var currentDownVoteValue = parseInt(downVoteElement.innerHTML);\n                currentDownVoteValue -= 1;\n                downVoteElement.innerHTML = currentDownVoteValue;\n              } else if (voteRecordObj[cllUserId]) {\n                alert(\"You're already neutral!\");\n                return;\n              } //Set Voter Status to 3\n\n\n              var voteRecordObj = JSON.parse(metaObj.voteRecord);\n              voteRecordObj[cllUserId] = \"3\";\n              var newVoteStatusData = JSON.stringify(voteRecordObj);\n              metaObj.voteRecord = newVoteStatusData;\n              var newPostMetaData = JSON.stringify({\n                \"meta\": metaObj\n              });\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n            } catch (error) {\n              //console.log(error);\n              ////console.log(\"Could not parse voteRecord\");\n              //console.log(\"There is no information on record *assertion\");\n              //console.log(metaObj.voteRecord);\n              //console.log(\"Change voter status to 3\");\n              metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"3\"}';\n              var newPostMetaData = JSON.stringify({\n                \"meta\": metaObj\n              });\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n              return;\n            }\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n        }\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createNeutralVoteBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createNewCategoryRequest.js":
/*!*********************************************************!*\
  !*** ./assets/js/functions/createNewCategoryRequest.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createNewCategoryRequest(newCategoryValue, makeRequest) {\n  var NewCategoryData = {\n    \"name\": newCategoryValue,\n    \"slug\": newCategoryValue.replace(\" \", \"-\") //console.log(\"Submit Button was clicked, now I'll post\");\n\n  };\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/cll-link-category/v1/cll-link/' + NewCategoryData.name, 'POST').then(function (request) {\n    //console.log(\"Request for new category has been made successfully\");\n    console.log(request.responseText);\n  })[\"catch\"](function (error) {\n    //console.log(\"Failed to make the new category request\");\n    console.log(error);\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createNewCategoryRequest.js?");

/***/ }),

/***/ "./assets/js/functions/createNewListBtn.js":
/*!*************************************************!*\
  !*** ./assets/js/functions/createNewListBtn.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createNewListBtn(makeRequest) {\n  var newListBtn = document.createElement('button');\n  newListBtn.setAttribute(\"class\", \"newListBtn\");\n  newListBtn.innerHTML = \"Add New List +\";\n  var cll_link_list = document.querySelector('.cll_link_list');\n  cll_link_list.parentElement.insertBefore(newListBtn, cll_link_list.parentElement.firstChild);\n  newListBtn.addEventListener(\"click\", function () {\n    if (confirm(\"Are you sure you would like to add a new list?\")) {\n      //console.log(\"You pressed YES!\");\n      makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\").then(function (request) {\n        var rawResponse = request.responseText.split('{\"id\":' + current_page_id).pop();\n        var jsonResponse = '{\"id\":' + current_page_id + rawResponse;\n        var objResponse = JSON.parse(jsonResponse);\n        var NewShortCodeData = {\n          \"content\": objResponse.content.raw + ' [cll_list]'\n        };\n        makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\", JSON.stringify(NewShortCodeData), true).then(function () {//console.log(\"Successfully updated page!\");\n        })[\"catch\"](function () {//console.log(\"Unsuccesful page update!\");\n        });\n      })[\"catch\"](function (error) {\n        console.log(error); //console.log(\"Unable to get page with given ID\");\n      });\n    } else {//console.log(\"You pressed NO\");\n    }\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createNewListBtn.js?");

/***/ }),

/***/ "./assets/js/functions/createUpVoteBtn.js":
/*!************************************************!*\
  !*** ./assets/js/functions/createUpVoteBtn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createUpVoteBtn(setAttributeOfElementsInArray, makeRequest) {\n  var allListItemsCollection = document.getElementsByClassName('link-list-item');\n  var allListItemsArray = Array.prototype.slice.call(allListItemsCollection, 0);\n  var incrementer = 0;\n  allListItemsArray.forEach(function (listItem) {\n    var upVoteBtn = document.createElement(\"button\");\n    upVoteBtn.setAttribute('class', 'up_vote_button');\n    var cllId = document.createAttribute(\"cllId\"); // Create a \"class\" attribute\n\n    upVoteBtn.setAttributeNode(cllId);\n    upVoteBtn.setAttribute('cllid', incrementer);\n    listItem.appendChild(upVoteBtn); //append to inner html\n\n    incrementer += 1;\n  });\n  var linkListTitleArray = document.querySelectorAll('.link-list-title');\n  setAttributeOfElementsInArray(linkListTitleArray, 'cllId');\n  var upVoteBtnArray = document.querySelectorAll('.up_vote_button');\n  upVoteBtnArray.forEach(function (upVoteBtn) {\n    upVoteBtn.addEventListener('click', function () {\n      linkListTitleArray.forEach(function (linkListTitle) {\n        var post_slug = linkListTitle.textContent.trim().replace(/\\s/g, '-').toLowerCase(); //console.log(post_slug);\n\n        if (linkListTitle.getAttribute('cllId') === upVoteBtn.getAttribute('cllId')) {\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link?slug=' + post_slug, 'GET').then(function (request) {\n            var objResponse = JSON.parse(request.responseText);\n            var currentLinkItemId = upVoteBtn.getAttribute('cllId');\n            var metaObj = objResponse[0].meta;\n\n            try {\n              var voteRecordObj = JSON.parse(metaObj.voteRecord); //console.log(voteRecordObj[cllUserId]);\n\n              if (voteRecordObj[cllUserId] !== \"\") //if current user status is not empty\n                {\n                  //console.log(\"There is information on record, here's the information: \");\n                  //console.log(metaObj.voteRecord);\n                  var currentUserVoteStatus = parseInt(voteRecordObj[cllUserId]); //console.log(JSON.parse(metaObj.voteRecord))\n\n                  if (!isNaN(currentUserVoteStatus)) {\n                    metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"1\"}'; //console.log(\"add UpVote to post\");\n\n                    metaObj.up_votes += 1; //visually increment upvote\n\n                    var upVoteButton = document.querySelector('.up_vote_button[cllId=\"' + currentLinkItemId + '\"]'); //upVoteButton.style.backgroundColor = '#16C60C';\n                    //console.log(currentLinkItemId);\n\n                    var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                    var currentUpVoteValue = parseInt(upVoteElement.textContent);\n                    currentUpVoteValue += 1;\n                    upVoteElement.innerHTML = currentUpVoteValue;\n                    var newPostMetaData = JSON.stringify({\n                      \"meta\": metaObj\n                    });\n                    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                    return;\n                  } else if (currentUserVoteStatus === 1) {\n                    alert(\"You've already up voted this post!\");\n                    return;\n                  } else if (currentUserVoteStatus === 0) {\n                    //console.log(\"Voter status was 0, incrementing up vote /removing downvote (visually too), changing status to 1\");\n                    //Set voter status to 1\n                    var voteRecordObj = JSON.parse(metaObj.voteRecord);\n                    voteRecordObj[cllUserId] = \"1\";\n                    var newVoteStatusData = JSON.stringify(voteRecordObj);\n                    metaObj.voteRecord = newVoteStatusData; //remove 1 down vote\n\n                    metaObj.down_votes -= 1; //visually remove down vote\n\n                    var downVoteElement = document.querySelector('.down_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                    var currentDownVoteValue = parseInt(downVoteElement.textContent);\n                    currentDownVoteValue -= 1;\n                    downVoteElement.innerHTML = currentDownVoteValue; //addUpVote\n\n                    metaObj.up_votes += 1; //visually add up vote\n\n                    var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                    var currentUpVoteValue = parseInt(upVoteElement.textContent);\n                    currentUpVoteValue += 1;\n                    upVoteElement.innerHTML = currentUpVoteValue;\n                    var newPostMetaData = JSON.stringify({\n                      \"meta\": metaObj\n                    });\n                    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                  } else if (currentUserVoteStatus === 3) {\n                    //console.log(\"Voter status was 3, incrementing up vote (visually too), changing status to 1\");\n                    //Increment up_votes in metaObj\n                    metaObj.up_votes += 1; //visually increment up vote\n\n                    var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n                    var currentUpVoteValue = parseInt(upVoteElement.textContent);\n                    currentUpVoteValue += 1;\n                    upVoteElement.innerHTML = currentUpVoteValue; //Edit JSONstring metaObj.voteRecord\n\n                    var voteRecordObj = JSON.parse(metaObj.voteRecord);\n                    voteRecordObj[cllUserId] = \"1\";\n                    var newVoteStatusData = JSON.stringify(voteRecordObj);\n                    metaObj.voteRecord = newVoteStatusData;\n                    var newPostMetaData = JSON.stringify({\n                      \"meta\": metaObj\n                    });\n                    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                  }\n                }\n            } catch (error) {\n              //console.log(error);\n              //console.log(\"Could not parse voteRecord\");\n              //console.log(\"There is no information on record *assertion\");\n              metaObj.voteRecord = '{\"' + cllUserId + '\":' + '\"1\"}'; //console.log(\"add UpVote to post\");\n\n              metaObj.up_votes += 1; //visually increment upvote\n\n              var upVoteButton = document.querySelector('.up_vote_button[cllId=\"' + currentLinkItemId + '\"]'); //upVoteButton.style.backgroundColor = '#16C60C';\n              //console.log(currentLinkItemId);\n\n              var upVoteElement = document.querySelector('.up_votes_counter[cllId=\"' + currentLinkItemId + '\"]');\n              var currentUpVoteValue = parseInt(upVoteElement.textContent);\n              currentUpVoteValue += 1;\n              upVoteElement.innerHTML = currentUpVoteValue;\n              var newPostMetaData = JSON.stringify({\n                \"meta\": metaObj\n              });\n              makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/' + objResponse[0].id, 'POST', newPostMetaData).then(function (request) {//console.log(request.responseText);\n              })[\"catch\"](function (error) {//console.log(error);\n              });\n              return;\n            }\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n        }\n      });\n    });\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/createUpVoteBtn.js?");

/***/ }),

/***/ "./assets/js/functions/displayVotesPerItem.js":
/*!****************************************************!*\
  !*** ./assets/js/functions/displayVotesPerItem.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function displayVotesPerItem(setAttributeOfElementsInArray, makeRequest) {\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link/', 'GET').then(function (request) {\n    var cllLinkArray = JSON.parse(request.responseText);\n    var linkListTitleArray = document.querySelectorAll('.link-list-title');\n    var incrementer = 0; //console.log(cllLinkArray);\n\n    cllLinkArray.forEach(function (cllLink) {\n      linkListTitleArray.forEach(function (linkListTitle) {\n        var post_slug = linkListTitle.textContent.trim().replace(/\\s/g, '-').toLowerCase();\n\n        if (cllLink.slug === post_slug) {\n          var upVotesElement = document.createElement('p');\n          upVotesElement.setAttribute('class', 'up_votes_counter');\n          upVotesElement.innerHTML = cllLinkArray[incrementer].meta.up_votes;\n          var downVotesElement = document.createElement('p');\n          downVotesElement.setAttribute('class', 'down_votes_counter');\n          downVotesElement.innerHTML = cllLinkArray[incrementer].meta.down_votes;\n          var currentLinkItemId = linkListTitle.getAttribute('cllId');\n          var downVoteButton = document.querySelector('.down_vote_button[cllId=\"' + currentLinkItemId + '\"]');\n          var upVoteButton = document.querySelector('.up_vote_button[cllId=\"' + currentLinkItemId + '\"]');\n          downVoteButton.appendChild(downVotesElement);\n          upVoteButton.appendChild(upVotesElement); //display \"submittedByElement\";\n\n          var submittedByElement = document.createElement('p');\n          submittedByElement.setAttribute('class', 'submitted_by'); //console.log(cllLinkArray[incrementer].meta);\n\n          submittedByElement.innerHTML = \"Submitted by: \" + cllLinkArray[incrementer].meta.submitted_by; //console.log(currentLinkItemId);\n\n          var linkListItem = document.querySelector('.link-list-item[cllId=\"' + currentLinkItemId + '\"]');\n\n          try {\n            linkListItem.appendChild(submittedByElement);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      });\n      incrementer += 1;\n    });\n    var downVoteCounterArray = document.querySelectorAll('.down_votes_counter');\n    setAttributeOfElementsInArray(downVoteCounterArray, 'cllId');\n    var upVoteCounterArray = document.querySelectorAll('.up_votes_counter');\n    setAttributeOfElementsInArray(upVoteCounterArray, 'cllId');\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/displayVotesPerItem.js?");

/***/ }),

/***/ "./assets/js/functions/endLinkRequest.js":
/*!***********************************************!*\
  !*** ./assets/js/functions/endLinkRequest.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function endLinkRequest(currentAddToListBtn, makeRequest) {\n  var multiListPageCategoryIds = \"cll_category_ids\" + \"_\" + currentAddToListBtn.getAttribute('cllid'); //console.log(window[multiListPageCategoryIds]);\n\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/users/' + cllUserId, 'GET').then(function (request) {\n    var objResponse = JSON.parse(request.responseText); //console.log(objResponse.name);\n\n    return objResponse.name;\n  }).then(function (username) {\n    var NewLinkItemData = {\n      \"title\": document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value,\n      \"slug\": \"/\" + document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value.replace(/ /g, '-').toLowerCase(),\n      \"meta\": {\n        \"URL\": document.querySelector('[name=\"newListItemUrl\"].add_to_list_input').value.replace(/ /g, '-').replace(/%20/g, '-'),\n        \"link_type\": \"external link\",\n        \"submitted_by\": username\n      },\n      \"status\": \"publish\",\n      \"link_category\": [window[multiListPageCategoryIds]] //console.log(NewLinkItemData);\n      //create new link post type\n\n    };\n    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link', 'POST', JSON.stringify(NewLinkItemData), true).then(function (request) {//console.log(request.responseText);\n      //console.log(\"Success, new post created\");\n      //document.location.reload(true);\n    });\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n  alert(\"Thank you for submitting!\");\n  var newListItemTitle = document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value; //event.stopPropagation();\n\n  var jsDataArray = {\n    \"newListItemTitle\": newListItemTitle,\n    \"currentAddToListBtn\": currentAddToListBtn //addNewListItemJS(jsDataArray);\n\n  };\n};\n\n//# sourceURL=webpack:///./assets/js/functions/endLinkRequest.js?");

/***/ }),

/***/ "./assets/js/functions/handleSearchInput.js":
/*!**************************************************!*\
  !*** ./assets/js/functions/handleSearchInput.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function handleSearchInput() {\n  var cllSearchFormInput = document.querySelector('.cll_search_form_input');\n  var cllSuggestions = document.querySelector('.cll-suggestions');\n\n  if (cllSearchFormInput !== undefined) {\n    var searchEngineTimeout;\n\n    cllSearchFormInput.onkeydown = function () {\n      if (event.keyCode == 13) {\n        event.preventDefault();\n      }\n    };\n\n    cllSearchFormInput.onkeyup = function () {\n      //clear search results\n      cllSuggestions.innerHTML = ''; //clear search results array with IIFE\n\n      (function () {\n        //var cllSuggestions = document.querySelector('.cll-suggestions');\n        var loadingElementCollection = document.querySelectorAll('#cll-loading');\n        var loadingElement = document.createElement(\"div\");\n        loadingElement.setAttribute('id', 'cll-loading');\n        loadingElement.innerHTML = 'LOADING';\n\n        if (loadingElementCollection.length === 0) {\n          //console.log(\"Adding Loading Element\");\n          cllSuggestions.appendChild(loadingElement);\n        }\n      })(); //Process searchEngine Input after one second\n\n\n      searchEngineTimeout = setTimeout(function () {\n        clearTimeout(searchEngineTimeout); //If the input is nothing then clear search results\n\n        if (cllSearchFormInput.value === ' ' || cllSearchFormInput.value === '') {\n          //console.log(\"No value was entered\");\n          cllSuggestions.innerHTML = '';\n        } else {\n          makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link?search=' + cllSearchFormInput.value, 'GET', false).then(function (request) {\n            cllSuggestions.innerHTML = '';\n            var searchResultsObj = JSON.parse(request.responseText);\n            searchResultsObj.forEach(function (searchResult) {\n              if (cllSuggestions.childElementCount < 5) {\n                //console.log(\"Search result below!\");\n                //console.log(searchResult);\n                var searchResultElement = document.createElement(\"div\");\n                searchResultElement.setAttribute('class', 'search-result-element');\n                searchResultElement.innerHTML = searchResult.title.rendered; //set innerHTML to title\n\n                if (searchResult.meta.link_type.toLowerCase() === \"external link\") {\n                  cllSuggestions.appendChild(searchResultElement);\n                } //make searchResult Clickable\n\n\n                searchResultElement.addEventListener('click', function () {\n                  event.preventDefault();\n                  window.open(searchResult.meta.URL); //Open in link new window\n                });\n              }\n            });\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n        }\n      }, 1000);\n    };\n  }\n};\n\n//# sourceURL=webpack:///./assets/js/functions/handleSearchInput.js?");

/***/ }),

/***/ "./assets/js/functions/isObjEmpty.js":
/*!*******************************************!*\
  !*** ./assets/js/functions/isObjEmpty.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isObjEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack:///./assets/js/functions/isObjEmpty.js?");

/***/ }),

/***/ "./assets/js/functions/isUrl.js":
/*!**************************************!*\
  !*** ./assets/js/functions/isUrl.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isUrl(str) {\n  regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n  if (regexp.test(str)) {\n    //console.log('returned true');\n    return true;\n  } else {\n    //console.log('returned false')\n    return false;\n  }\n};\n\n//# sourceURL=webpack:///./assets/js/functions/isUrl.js?");

/***/ }),

/***/ "./assets/js/functions/makeRequest.js":
/*!********************************************!*\
  !*** ./assets/js/functions/makeRequest.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function makeRequest(url, method, sendData, refresh) {\n  var refreshInput = refresh || ''; //console.log(\"request made\");\n  // Create the XHR request\n\n  var request = new XMLHttpRequest(); // Return it as a Promise\n\n  return new Promise(function (resolve, reject) {\n    // Setup our listener to process compeleted requests\n    request.onreadystatechange = function () {\n      // Only run if the request is complete\n      if (request.readyState !== 4) return; // Process the response\n\n      if (request.status >= 200 && request.status < 300) {\n        // If successful\n        resolve(request);\n\n        if (typeof sendData !== 'undefined') {//document.location.reload(true);\n          //console.log('sendData was present!');\n        }\n\n        if (refreshInput === false) {} else if (refreshInput === true) {\n          document.location.reload(true);\n        }\n      } else {\n        // If failed\n        reject({\n          status: request.status,\n          statusText: request.statusText\n        });\n      }\n    }; // Setup our HTTP request\n\n\n    request.open(method || 'GET', url, true);\n    request.setRequestHeader(\"X-WP-Nonce\", magicalData.nonce);\n    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\"); // Send the request\n\n    if (typeof sendData === 'undefined') {\n      request.send(); //console.log(\"Data is undefined! No data was sent\");\n    } else {\n      //console.log(sendData);\n      request.send(sendData);\n    }\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/makeRequest.js?");

/***/ }),

/***/ "./assets/js/functions/replaceOccurence.js":
/*!*************************************************!*\
  !*** ./assets/js/functions/replaceOccurence.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function replaceOccurrence(string, regex, n, replace) {\n  var i = 0; //set up incrementer\n\n  return string.replace(regex, function (match) {\n    //i+=1;\n    if (i === n) {\n      //console.log(replace);\n      i += 1;\n      return replace;\n    }\n\n    i += 1; //console.log(match);\n\n    return match;\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/replaceOccurence.js?");

/***/ }),

/***/ "./assets/js/functions/setAttributeOfElementsInArray.js":
/*!**************************************************************!*\
  !*** ./assets/js/functions/setAttributeOfElementsInArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function setAttributeOfElementsInArray(array, attribute_name) {\n  var incrementer = 0;\n  array.forEach(function (item) {\n    var attribute = document.createAttribute(attribute_name);\n    item.setAttributeNode(attribute);\n    item.setAttribute(attribute_name, incrementer);\n    incrementer += 1;\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/setAttributeOfElementsInArray.js?");

/***/ }),

/***/ "./assets/js/functions/throughLinkRequest.js":
/*!***************************************************!*\
  !*** ./assets/js/functions/throughLinkRequest.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function throughLinkRequest(currentAddToListBtn, makeRequest) {\n  var NewLinkPageData = {\n    \"title\": document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value,\n    \"slug\": \"/\" + document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value.replace(/ /g, '-').toLowerCase(),\n    \"content\": '[cll_list]',\n    \"type\": \"page\",\n    \"status\": \"publish\" //Create new link page with user entered URL + information about how to make page\n    //createLinkPage\n\n  };\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages', 'POST', JSON.stringify(NewLinkPageData)).then(function () {//console.log(\"Success, new page created!\");\n    //document.location.reload(true);\n  });\n  var multiListPageCategoryIds = \"cll_category_ids\" + \"_\" + currentAddToListBtn.getAttribute('cllid');\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/users/' + cllUserId, 'GET').then(function (request) {\n    var objResponse = JSON.parse(request.responseText); //console.log(objResponse.name);\n\n    return objResponse.name;\n  }).then(function (username) {\n    var NewLinkItemData = {\n      \"title\": document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value,\n      \"slug\": \"/\" + document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value.replace(/ /g, '-').toLowerCase(),\n      \"meta\": {\n        \"URL\": cllGlobals.currentProtocalDomain + '/' + document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value.replace(/ /g, '-').replace(/%20/g, '-'),\n        \"link_type\": \"internal link\",\n        \"submitted_by\": username\n      },\n      \"status\": \"publish\",\n      \"link_category\": [window[multiListPageCategoryIds]] //create new link post type\n\n    };\n    makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/cll-link', 'POST', JSON.stringify(NewLinkItemData), true).then(function () {//console.log(\"Success, new post created\");\n      //document.location.reload(true);\n    });\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n  var newListItemTitle = document.querySelector('[name=\"newListItemTitle\"].add_to_list_input').value; //event.stopPropagation();\n\n  var jsDataArray = {\n    \"newListItemTitle\": newListItemTitle,\n    \"currentAddToListBtn\": currentAddToListBtn //addNewListItemJS(jsDataArray);\n\n  };\n};\n\n//# sourceURL=webpack:///./assets/js/functions/throughLinkRequest.js?");

/***/ }),

/***/ "./assets/js/functions/updateCllListRequest.js":
/*!*****************************************************!*\
  !*** ./assets/js/functions/updateCllListRequest.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = //Function for updating shortcode of current page\nfunction updateCllListRequest(cllRequestData, makeRequest, replaceOccurrence) {\n  var selectedCategory = cllRequestData['selectedCategory'];\n  var currentCllId = parseInt(cllRequestData['currentCllId']); //console.log(selectedCategory);\n\n  console.log(currentCllId);\n  makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\").then(function (request) {\n    var response = request.responseText;\n    var rawResponse = response.split('{\"id\":' + current_page_id).pop();\n    var jsonResponse = '{\"id\":' + current_page_id + rawResponse;\n    var objResponse = JSON.parse(jsonResponse);\n    var cllListRegex = /\\[cll_list]?\\s?/g;\n    var cllListShortCodeArray = objResponse.content.raw.match(cllListRegex);\n    console.log(cllListShortCodeArray);\n    var currentShortCode = cllListShortCodeArray[currentCllId].toString().toLowerCase();\n    var plainCllListRegex = /\\[cll_list]?(\\s+)?]/g;\n    var plainShortCodeArray = currentShortCode.match(plainCllListRegex);\n\n    if (plainShortCodeArray !== null) {\n      //else{\n      var cllReplacementRegex = /\\[cll_list]?\\s?\\]?/g;\n      var pageContent = objResponse.content.raw; //replace ONLY the correctly numbered short code using INDEX\n\n      var newPageContent = replaceOccurrence(pageContent, cllReplacementRegex, parseInt(currentCllId), '[cll_list category_name=\"' + selectedCategory + '\"]'); //var newPageContent = pageContent.replace(cllReplacementRegex,'[cll_list category_name=\"'+selectedCategory+'\"]');\n\n      console.log(\"selected category is: \" + selectedCategory);\n      console.log(pageContent);\n      console.log(newPageContent);\n      var NewShortCodeData = {\n        \"content\": newPageContent //}\n\n      };\n      return NewShortCodeData;\n    } else {\n      console.log(\"Short Code with New Category FOUND!\");\n      var cllPopulatedReplacementRegex = /category_name\\s?=\\s?\"(.*?)\"/g;\n      var pageContent = objResponse.content.raw; //replace ONLY the correctly numbered short code using INDEX\n\n      var newPageContent = replaceOccurrence(pageContent, cllPopulatedReplacementRegex, parseInt(currentCllId), 'category_name=\"' + selectedCategory + '\"');\n      var NewShortCodeData = {\n        \"content\": newPageContent\n      };\n      return NewShortCodeData;\n    }\n  }).then(function (newShortCodeData) {\n    //console.log(\"WIN NUMBER TWO\");\n    //console.log(newShortCodeData);\n    return makeRequest(cllGlobals.currentProtocalDomain + '/wp-json/wp/v2/pages/' + current_page_id, \"POST\", JSON.stringify(newShortCodeData), true);\n  })[\"catch\"](function (error) {\n    //console.log(\"FAILED\");\n    console.log(error);\n  });\n};\n\n//# sourceURL=webpack:///./assets/js/functions/updateCllListRequest.js?");

/***/ }),

/***/ "./assets/src/mainjs.js":
/*!******************************!*\
  !*** ./assets/src/mainjs.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_cllGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/cllGlobals */ \"./assets/js/cllGlobals.js\");\n/* harmony import */ var _js_cllGlobals__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_cllGlobals__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../js/functions/setAttributeOfElementsInArray */ \"./assets/js/functions/setAttributeOfElementsInArray.js\");\n/* harmony import */ var _js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../js/functions/makeRequest */ \"./assets/js/functions/makeRequest.js\");\n/* harmony import */ var _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _js_functions_createAddToListBtn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../js/functions/createAddToListBtn */ \"./assets/js/functions/createAddToListBtn.js\");\n/* harmony import */ var _js_functions_createAddToListBtn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createAddToListBtn__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _js_functions_replaceOccurence__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../js/functions/replaceOccurence */ \"./assets/js/functions/replaceOccurence.js\");\n/* harmony import */ var _js_functions_replaceOccurence__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_js_functions_replaceOccurence__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _js_functions_displayVotesPerItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../js/functions/displayVotesPerItem */ \"./assets/js/functions/displayVotesPerItem.js\");\n/* harmony import */ var _js_functions_displayVotesPerItem__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_js_functions_displayVotesPerItem__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _js_functions_createDownVoteBtn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../js/functions/createDownVoteBtn */ \"./assets/js/functions/createDownVoteBtn.js\");\n/* harmony import */ var _js_functions_createDownVoteBtn__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createDownVoteBtn__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _js_functions_createNeutralVoteBtn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../js/functions/createNeutralVoteBtn */ \"./assets/js/functions/createNeutralVoteBtn.js\");\n/* harmony import */ var _js_functions_createNeutralVoteBtn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createNeutralVoteBtn__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _js_functions_createUpVoteBtn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../js/functions/createUpVoteBtn */ \"./assets/js/functions/createUpVoteBtn.js\");\n/* harmony import */ var _js_functions_createUpVoteBtn__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createUpVoteBtn__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _js_functions_createDeleteListBtn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../js/functions/createDeleteListBtn */ \"./assets/js/functions/createDeleteListBtn.js\");\n/* harmony import */ var _js_functions_createDeleteListBtn__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createDeleteListBtn__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _js_functions_createNewListBtn__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../js/functions/createNewListBtn */ \"./assets/js/functions/createNewListBtn.js\");\n/* harmony import */ var _js_functions_createNewListBtn__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createNewListBtn__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _js_functions_isUrl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../js/functions/isUrl */ \"./assets/js/functions/isUrl.js\");\n/* harmony import */ var _js_functions_isUrl__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_js_functions_isUrl__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _js_functions_handleSearchInput__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../js/functions/handleSearchInput */ \"./assets/js/functions/handleSearchInput.js\");\n/* harmony import */ var _js_functions_handleSearchInput__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_js_functions_handleSearchInput__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _js_functions_isObjEmpty__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../js/functions/isObjEmpty */ \"./assets/js/functions/isObjEmpty.js\");\n/* harmony import */ var _js_functions_isObjEmpty__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_js_functions_isObjEmpty__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _js_functions_createAdminRemoveBtn__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../js/functions/createAdminRemoveBtn */ \"./assets/js/functions/createAdminRemoveBtn.js\");\n/* harmony import */ var _js_functions_createAdminRemoveBtn__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createAdminRemoveBtn__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _js_functions_cllCreateForm__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../js/functions/cllCreateForm */ \"./assets/js/functions/cllCreateForm.js\");\n/* harmony import */ var _js_functions_cllCreateForm__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_js_functions_cllCreateForm__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _js_functions_addClickToSettingsCancelBtn__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../js/functions/addClickToSettingsCancelBtn */ \"./assets/js/functions/addClickToSettingsCancelBtn.js\");\n/* harmony import */ var _js_functions_addClickToSettingsCancelBtn__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_js_functions_addClickToSettingsCancelBtn__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _js_functions_cllAddOnClickToCancelBtn__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../js/functions/cllAddOnClickToCancelBtn */ \"./assets/js/functions/cllAddOnClickToCancelBtn.js\");\n/* harmony import */ var _js_functions_cllAddOnClickToCancelBtn__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_js_functions_cllAddOnClickToCancelBtn__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _js_functions_cllAddOnClickToSubmitBtn__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../js/functions/cllAddOnClickToSubmitBtn */ \"./assets/js/functions/cllAddOnClickToSubmitBtn.js\");\n/* harmony import */ var _js_functions_cllAddOnClickToSubmitBtn__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_js_functions_cllAddOnClickToSubmitBtn__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _js_functions_throughLinkRequest__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../js/functions/throughLinkRequest */ \"./assets/js/functions/throughLinkRequest.js\");\n/* harmony import */ var _js_functions_throughLinkRequest__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_js_functions_throughLinkRequest__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _js_functions_endLinkRequest__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../js/functions/endLinkRequest */ \"./assets/js/functions/endLinkRequest.js\");\n/* harmony import */ var _js_functions_endLinkRequest__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_js_functions_endLinkRequest__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _js_functions_updateCllListRequest__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../js/functions/updateCllListRequest */ \"./assets/js/functions/updateCllListRequest.js\");\n/* harmony import */ var _js_functions_updateCllListRequest__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_js_functions_updateCllListRequest__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var _js_functions_createNewCategoryRequest__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../js/functions/createNewCategoryRequest */ \"./assets/js/functions/createNewCategoryRequest.js\");\n/* harmony import */ var _js_functions_createNewCategoryRequest__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_js_functions_createNewCategoryRequest__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _js_functions_addClickToSettingsSubmitBtn__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../js/functions/addClickToSettingsSubmitBtn */ \"./assets/js/functions/addClickToSettingsSubmitBtn.js\");\n/* harmony import */ var _js_functions_addClickToSettingsSubmitBtn__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_js_functions_addClickToSettingsSubmitBtn__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _js_functions_cllCreateSettingsForm__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../js/functions/cllCreateSettingsForm */ \"./assets/js/functions/cllCreateSettingsForm.js\");\n/* harmony import */ var _js_functions_cllCreateSettingsForm__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_js_functions_cllCreateSettingsForm__WEBPACK_IMPORTED_MODULE_24__);\n\n //const setAttributeOfElementsInArray = require( '../js/functions/setAttributeOfElementsInArray');\n\n\n\n\n //const displayVotesPerItem = require('../js/functions/displayVotesPerItem');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\nsetAttributeOfElementsInArray\r\ncreateDeleteListBtn\r\ncreateNewListBtn\r\nisUrl\r\nhandleSearchInput\r\nisObjEmpty\r\ncreateAdminRemoveBtn\r\nmakeRequest ?...\r\ncllCreateForm\r\naddClickToSettingsCancelBtn\r\ncllAddOnClickToCancelBtn\r\ncllAddOnClickToSubmitBtn\r\nthroughLinkRequest\r\nendLinkRequest\r\nupdateCllListRequest\r\ncreateNewCategoryRequest\r\naddClickToSettingsSubmitBtn\r\ncllCreateSettingsForm\r\n*/\n\nwindow.onload = function () {\n  if (document.querySelector(\".cll_search_form_input\")) {\n    //console.log(\"Search bar exists\");\n    _js_functions_handleSearchInput__WEBPACK_IMPORTED_MODULE_12___default()();\n  } else {//console.log(\"Search bar doesn't exist\");\n  }\n\n  var test = function test() {\n    console.log(\"I'm a test\");\n  };\n\n  test(); //createListTitles(); deprecated\n\n  var allListItemsArray = document.querySelectorAll('.link-list-item');\n  _js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default()(allListItemsArray, 'cllId');\n  _js_functions_createAddToListBtn__WEBPACK_IMPORTED_MODULE_3___default()();\n  _js_functions_cllCreateForm__WEBPACK_IMPORTED_MODULE_15___default()(_js_functions_cllAddOnClickToSubmitBtn__WEBPACK_IMPORTED_MODULE_18___default.a, _js_functions_cllAddOnClickToCancelBtn__WEBPACK_IMPORTED_MODULE_17___default.a, _js_functions_isUrl__WEBPACK_IMPORTED_MODULE_11___default.a, _js_functions_endLinkRequest__WEBPACK_IMPORTED_MODULE_20___default.a, _js_functions_throughLinkRequest__WEBPACK_IMPORTED_MODULE_19___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_cllCreateSettingsForm__WEBPACK_IMPORTED_MODULE_24___default()(_js_functions_addClickToSettingsSubmitBtn__WEBPACK_IMPORTED_MODULE_23___default.a, _js_functions_addClickToSettingsCancelBtn__WEBPACK_IMPORTED_MODULE_16___default.a, _js_functions_updateCllListRequest__WEBPACK_IMPORTED_MODULE_21___default.a, _js_functions_createNewCategoryRequest__WEBPACK_IMPORTED_MODULE_22___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a, _js_functions_replaceOccurence__WEBPACK_IMPORTED_MODULE_4___default.a);\n  _js_functions_displayVotesPerItem__WEBPACK_IMPORTED_MODULE_5___default()(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createDeleteListBtn__WEBPACK_IMPORTED_MODULE_9___default()(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createNewListBtn__WEBPACK_IMPORTED_MODULE_10___default()(_js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createDownVoteBtn__WEBPACK_IMPORTED_MODULE_6___default()(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createUpVoteBtn__WEBPACK_IMPORTED_MODULE_8___default()(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createNeutralVoteBtn__WEBPACK_IMPORTED_MODULE_7___default()(_js_functions_setAttributeOfElementsInArray__WEBPACK_IMPORTED_MODULE_1___default.a, _js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a);\n  _js_functions_createAdminRemoveBtn__WEBPACK_IMPORTED_MODULE_14___default()(_js_functions_makeRequest__WEBPACK_IMPORTED_MODULE_2___default.a, _js_functions_isObjEmpty__WEBPACK_IMPORTED_MODULE_13___default.a);\n};\n\n//# sourceURL=webpack:///./assets/src/mainjs.js?");

/***/ })

/******/ });